body {
  margin: 0;
  height: 500px;
	width: 300px;
  overflow: hidden;
  background: #222;
}

#root {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  height: 100%;
}

#root > div {
  height: 100%;
  width: 100%;
}

#root > h2 {
  color: #DB504A;
}

#sections_group {
  display: flex;
  justify-content: space-around;
  align-items: center;
  flex-direction: column;
}

#add_group {
  display: flex;
  justify-content: space-between;
}

section {
  background-color: rgba(250, 250, 252, 0.1);
  color: #FDB833;
  padding: 10px;
  width: 80%;
  border-radius: 2px;
  button {
    width: 50%;
  }
}

section::after {
  box-shadow: inset 0 0 0 200px rgba(255,255,255,0.5);
  filter: blur(10px);
}

$particleSize: 100vmin;
$animationDuration: 10s;
$amount: 20;
.background span {
  width: $particleSize;
  height: $particleSize;
  border-radius: $particleSize;
  backface-visibility: hidden;
  position: absolute;
  animation-name: move;
  animation-duration: $animationDuration;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  z-index: -1;
  $colors: (
    #2A9D8F,
    #E76F51,
    #E3B505
  );
  @for $i from 1 through $amount {
    &:nth-child(#{$i}) {
      color: nth($colors, random(length($colors)));
      top: random(100) * 1%;
      left: random(100) * 1%;
      animation-duration: (random($animationDuration * 10) / 10) * 1s + 10s;
      animation-delay: random(($animationDuration + 10s) * 10) / 10 * -1s;
      transform-origin: (random(50) - 25) * 1vw (random(50) - 25) * 1vh;
      $blurRadius: (random() + 0.5) * $particleSize * 0.5;
      $x: if(random() > 0.5, -1, 1);
      box-shadow: ($particleSize * 2 * $x) 0 $blurRadius currentColor;
    }
  }
}

@keyframes move {
  100% {
    transform: translate3d(0, 0, 1px) rotate(360deg);
  }
}
